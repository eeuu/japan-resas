---
// ルーティング
export async function getStaticPaths() {
  const response = await fetch(
    "https://opendata.resas-portal.go.jp/api/v1/prefectures",
    {
      headers: { "X-API-KEY": import.meta.env.RESAS_API_KEY as string },
    }
  );
  const prefectures = await response.json();

  return prefectures.result.map((prefecture) => ({
    params: { prefCode: prefecture.prefCode.toString() },
    props: { prefecture },
  }));
}
const { prefecture } = Astro.props;

// 人口データ取得
async function fetchPopulationPerYear(prefCode) {
  const response = await fetch(
    `https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=${prefCode}`,
    {
      headers: { "X-API-KEY": import.meta.env.RESAS_API_KEY as string },
    }
  );
  const data = await response.json();
  return data.result;
}
const populations = await fetchPopulationPerYear(prefecture.prefCode);

const years = populations.data.map((population) => {
  if (population.label === "総人口") {
    return population.data.map((populationData) => {
      return populationData.year;
    });
  }
  return null;
});
const flatYears = years.flat().filter((year) => year !== null);
console.log(JSON.stringify(flatYears));

const values = populations.data.map((population) => {
  if (population.label === "総人口") {
    return population.data.map((populationData) => {
      return populationData.value;
    });
  }
  return null;
});
const flatValues = values.flat().filter((value) => value !== null);
console.log(JSON.stringify(flatValues));
---

<script>
  import * as echarts from "echarts";

  const main = document.getElementById("main");
  const years = main.dataset.years.split(",");
  const values = main.dataset.values.split(",");
  const label = main.dataset.label;
  console.log(label);
  // チャート
  var myChart = echarts.init(main);
  myChart.setOption({
    title: {
      left: "center",
      text: label,
    },
    tooltip: {},
    xAxis: {
      data: years,
    },
    yAxis: {},
    series: [
      {
        name: "人口",
        type: "bar",
        data: values,
      },
    ],
  });
</script>

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Document</title>
  </head>
  <body class:list={["p-9"]}>
    <a href="/">home</a>
    <h1 class:list={["text-6xl", "text-center", "font-bold"]}>
      {prefecture.prefName}
    </h1>
    <p class:list={["max-w-[1200px]", "m-auto", "text-right"]}>
      実績値は{populations.boundaryYear}年まで、それ以降は推計値
    </p>
    <div class:list={["flex", "justify-center", "mt-40"]}>
      {
        populations.data.map((population) => (
          <div>
            {population.label === "総人口" && (
              <div
                id="main"
                class:list={["w-[900px]", "h-[600px]"]}
                data-years={flatYears}
                data-values={flatValues}
                data-label={population.label}
              />
            )}
          </div>
        ))
      }
    </div>
  </body>
</html>
