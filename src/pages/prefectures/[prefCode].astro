---
import BaseLayout from "@/layouts/BaseLayout.astro";

// 型定義
interface Prefecture {
  prefCode: number;
  prefName: string;
}

interface PopulationData {
  year: number;
  value: number;
}

interface Population {
  label: string;
  data: PopulationData[];
}

interface Populations {
  boundaryYear: number;
  data: Population[];
}

// ルーティング
export async function getStaticPaths() {
  const response = await fetch(
    "https://opendata.resas-portal.go.jp/api/v1/prefectures",
    {
      headers: { "X-API-KEY": import.meta.env.RESAS_API_KEY as string },
    }
  );
  const prefectures: { result: Prefecture[] } = await response.json();

  return prefectures.result.map((prefecture) => ({
    params: { prefCode: prefecture.prefCode.toString() },
    props: { prefecture },
  }));
}
const { prefecture } = Astro.props as { prefecture: Prefecture };

// 人口データ取得
async function fetchPopulationPerYear(prefCode: number): Promise<Populations> {
  const response = await fetch(
    `https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=${prefCode}`,
    {
      headers: { "X-API-KEY": import.meta.env.RESAS_API_KEY as string },
    }
  );
  const data: { result: Populations } = await response.json();
  return data.result;
}
const populations = await fetchPopulationPerYear(prefecture.prefCode);

const years = populations.data
  .map((population) => {
    if (population.label === "総人口") {
      return population.data.map((populationData) => populationData.year);
    }
    return null;
  })
  .flat()
  .filter((year): year is number => year !== null);
console.log(JSON.stringify(years));

const values = populations.data
  .map((population) => {
    if (population.label === "総人口") {
      return population.data.map((populationData) => populationData.value);
    }
    return null;
  })
  .flat()
  .filter((value): value is number => value !== null);
console.log(JSON.stringify(values));
---

<script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js" is:inline
></script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    const main = document.getElementById("main");
    if (
      main &&
      main.dataset.years &&
      main.dataset.values &&
      main.dataset.label
    ) {
      const years = main.dataset.years.split(",");
      const values = main.dataset.values.split(",");
      const label = main.dataset.label;
      console.log(label);
      // チャート
      var myChart = echarts.init(main);
      myChart.setOption({
        title: {
          left: "center",
          text: label,
        },
        tooltip: {},
        xAxis: {
          data: years,
        },
        yAxis: {},
        series: [
          {
            name: "人口",
            type: "bar",
            data: values,
          },
        ],
      });
    } else {
      console.error("Dataset properties are missing or main element not found");
    }
  });
</script>

<BaseLayout title={prefecture.prefName}>
  <a title={prefecture.prefName}></a>
  <a href="/">home</a>
  <h1 class:list={["text-6xl", "text-center", "font-bold"]}>
    {prefecture.prefName}
  </h1>
  <p class:list={["max-w-[1200px]", "mx-auto", "mt-7", "text-center"]}>
    実績値は{populations.boundaryYear}年まで、それ以降は推計値
  </p>
  <div class:list={["flex", "justify-center", "mt-40"]}>
    {
      populations.data.map((population) => (
        <div>
          {population.label === "総人口" && (
            <div
              id="main"
              class:list={["w-[900px]", "h-[600px]"]}
              data-years={years.join(",")}
              data-values={values.join(",")}
              data-label={population.label}
            />
          )}
        </div>
      ))
    }
  </div>
</BaseLayout>
